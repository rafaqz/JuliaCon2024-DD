[
  {
    "objectID": "index.html#why-another-named-array-package",
    "href": "index.html#why-another-named-array-package",
    "title": "DimensionalData.jl",
    "section": "Why another named array package?",
    "text": "Why another named array package?\n\n\nGeospatial data\n\nnamed dimensions and lookup values are ubiquitous\nselecting spatial and temporal subsets is ubiquitous\nthere are a lot of possible lookup configurations\nmulti-array datasets are also common\n\n\n\n\nxarray"
  },
  {
    "objectID": "index.html#dimension-are-wrappers",
    "href": "index.html#dimension-are-wrappers",
    "title": "DimensionalData.jl",
    "section": "Dimension are wrappers",
    "text": "Dimension are wrappers\n\nThey mark that the wrapped object belongs to the dimension:\n\nAn integer:\n\nX(1)\n\nX 1\n\n\n\n\nA range:\n\nX(50:10:100)\n\nX 50:10:100\n\n\n\n\nA selector :\n\nX(Not(At(70)))\n\nX InvertedIndices.InvertedIndex{At{Int64, Nothing, Nothing}}(At(70, nothing, nothing))"
  },
  {
    "objectID": "index.html#dimensional",
    "href": "index.html#dimensional",
    "title": "DimensionalData.jl",
    "section": "1 dimensional",
    "text": "1 dimensional\n\n\n\nA = DimArray([1, 2, 3], X([:a, :b, :c]))\n\n╭─────────────────────────────╮\n│ 3-element DimArray{Int64,1} │\n├─────────────────────────────┴───────────────── dims ┐\n  ↓ X Categorical{Symbol} [:a, :b, :c] ForwardOrdered\n└─────────────────────────────────────────────────────┘\n :a  1\n :b  2\n :c  3"
  },
  {
    "objectID": "index.html#n-dimensional",
    "href": "index.html#n-dimensional",
    "title": "DimensionalData.jl",
    "section": "N dimensional",
    "text": "N dimensional\nWith standard dimensions in a Tuple:\n\nA = DimArray(rand(3, 4), (X([:a, :b, :c]), Y(10.0:10:40.0)))\n\n╭─────────────────────────╮\n│ 3×4 DimArray{Float64,2} │\n├─────────────────────────┴─────────────────────────────────── dims ┐\n  ↓ X Categorical{Symbol} [:a, :b, :c] ForwardOrdered,\n  → Y Sampled{Float64} 10.0:10.0:40.0 ForwardOrdered Regular Points\n└───────────────────────────────────────────────────────────────────┘\n ↓ →  10.0       20.0       30.0        40.0\n  :a   0.981993   0.513781   0.0573086   0.133294\n  :b   0.597572   0.938506   0.687245    0.831078\n  :c   0.243421   0.560166   0.854638    0.592527"
  },
  {
    "objectID": "index.html#layers-with-the-same-dimensions",
    "href": "index.html#layers-with-the-same-dimensions",
    "title": "DimensionalData.jl",
    "section": "Layers with the same dimensions",
    "text": "Layers with the same dimensions\n\n\n\nds = X([:a, :b, :c]), Ti(10.0:10:40.0)\nS = DimStack((layer1=rand(Float32, 3, 4), layer2=zeros(Bool, 3, 4)), ds)\n\n╭──────────────╮\n│ 3×4 DimStack │\n├──────────────┴─────────────────────────────────────────────── dims ┐\n  ↓ X  Categorical{Symbol} [:a, :b, :c] ForwardOrdered,\n  → Ti Sampled{Float64} 10.0:10.0:40.0 ForwardOrdered Regular Points\n├──────────────────────────────────────────────────────────── layers ┤\n  :layer1 eltype: Float32 dims: X, Ti size: 3×4\n  :layer2 eltype: Bool dims: X, Ti size: 3×4\n└────────────────────────────────────────────────────────────────────┘"
  },
  {
    "objectID": "index.html#layers-with-different-dimensions",
    "href": "index.html#layers-with-different-dimensions",
    "title": "DimensionalData.jl",
    "section": "Layers with different dimensions:",
    "text": "Layers with different dimensions:\n\n\n\nx, ti = X([:a, :b, :c]), Ti(10.0:10:40.0)\nDimStack((twodims=rand(Float32, x, ti), onedim=zeros(Bool, x)))\n\n╭──────────────╮\n│ 3×4 DimStack │\n├──────────────┴─────────────────────────────────────────────── dims ┐\n  ↓ X  Categorical{Symbol} [:a, :b, :c] ForwardOrdered,\n  → Ti Sampled{Float64} 10.0:10.0:40.0 ForwardOrdered Regular Points\n├──────────────────────────────────────────────────────────── layers ┤\n  :twodims eltype: Float32 dims: X, Ti size: 3×4\n  :onedim  eltype: Bool dims: X size: 3\n└────────────────────────────────────────────────────────────────────┘"
  },
  {
    "objectID": "index.html#at",
    "href": "index.html#at",
    "title": "DimensionalData.jl",
    "section": "At",
    "text": "At\n\nFind exact or approximate matches\n\n\nA = DimArray([1, 2, 3, 4], (X([10.0, 20.0, 40.0, 80.0])))\nA[X(At(80.0))]\n\n4\n\n\n\nA[X(At(80.09; atol=0.1))]\n\n4"
  },
  {
    "objectID": "index.html#near",
    "href": "index.html#near",
    "title": "DimensionalData.jl",
    "section": "Near",
    "text": "Near\n\nFind the closest match\n\n\nA[X(Near(85))]\n\n4"
  },
  {
    "objectID": "index.html#contains",
    "href": "index.html#contains",
    "title": "DimensionalData.jl",
    "section": "Contains",
    "text": "Contains\n\nFind the interval that contains a value\n\n\n# Define a DimArray with Intervals lookup\nusing DimensionalData.Lookups\nA = DimArray(100:100:9900, X(1.0:1.0:99.0; sampling=Intervals(Start())))\n# Index with Contains\nA[X(Contains(9.5))]\n\n900"
  },
  {
    "objectID": "index.html#an-intervalsets.jl-interval",
    "href": "index.html#an-intervalsets.jl-interval",
    "title": "DimensionalData.jl",
    "section": ".. (an IntervalSets.jl Interval)",
    "text": ".. (an IntervalSets.jl Interval)\n\nSelect data inside an interval\n\n\nA[X=9.5 .. 15]\n\n╭─────────────────────────────╮\n│ 5-element DimArray{Int64,1} │\n├─────────────────────────────┴──────────────────────────────────────── dims ┐\n  ↓ X Sampled{Float64} 10.0:1.0:14.0 ForwardOrdered Regular Intervals{Start}\n└────────────────────────────────────────────────────────────────────────────┘\n 10.0  1000\n 11.0  1100\n 12.0  1200\n 13.0  1300\n 14.0  1400"
  },
  {
    "objectID": "index.html#where",
    "href": "index.html#where",
    "title": "DimensionalData.jl",
    "section": "Where",
    "text": "Where\n\nMake dimensional queries\n\n\nA[X=Where(isodd)]\n\n╭──────────────────────────────╮\n│ 50-element DimArray{Int64,1} │\n├──────────────────────────────┴───────────────────────────────────────── dims ┐\n  ↓ X Sampled{Float64} [1.0, 3.0, …, 97.0, 99.0] ForwardOrdered Irregular Intervals{Start}\n└──────────────────────────────────────────────────────────────────────────────┘\n  1.0   100\n  3.0   300\n  5.0   500\n  7.0   700\n  9.0   900\n 11.0  1100\n  ⋮    \n 91.0  9100\n 93.0  9300\n 95.0  9500\n 97.0  9700\n 99.0  9900"
  },
  {
    "objectID": "index.html#plots.jl",
    "href": "index.html#plots.jl",
    "title": "DimensionalData.jl",
    "section": "Plots.jl",
    "text": "Plots.jl\n\nusing Plots\nPlots.scatter(rand(X([:a, :b, :c, :d])))"
  },
  {
    "objectID": "index.html#makie.jl",
    "href": "index.html#makie.jl",
    "title": "DimensionalData.jl",
    "section": "Makie.jl",
    "text": "Makie.jl\n\nusing CairoMakie, Distributions\nMakie.heatmap(rand(Normal(), X(100:10:200), Y([:a, :b, :c])))"
  },
  {
    "objectID": "index.html#some-packages-building-on-dimensionaldata.jl",
    "href": "index.html#some-packages-building-on-dimensionaldata.jl",
    "title": "DimensionalData.jl",
    "section": "Some packages building on DimensionalData.jl",
    "text": "Some packages building on DimensionalData.jl\n\n\nRasters.jl\nYAXArrays.jl\nClimateBase.jl\nAstroImages.jl\nPyramidScheme.jl\nArviz.jl\nJuMP.jl (extension)\nDynamicGrids.jl"
  },
  {
    "objectID": "index.html#thanks",
    "href": "index.html#thanks",
    "title": "DimensionalData.jl",
    "section": "Thanks",
    "text": "Thanks\n\n\n(And checkout the new docs by Lazaro Alonzo!)\nDocs"
  }
]