{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"DimensionalData.jl\"\n",
        "subtitle: \"\"\n",
        "author:\n",
        "  - name: Rafael Schouten\n",
        "    orcid: \n",
        "    email: rafaelschouten@gmail.com\n",
        "    affiliation: \n",
        "      - name: Globe Intstitute, Copenhagen University\n",
        "      - department: Section for Biodiversity\n",
        "date: \"2024-07-10\"\n",
        "# bibliography: AutoDiff.bib\n",
        "# engine: julia\n",
        "format:\n",
        "  revealjs:\n",
        "    incremental: true\n",
        "    toc: true\n",
        "    toc-depth: 1\n",
        "    toc-incremental: false\n",
        "    slide-number: true\n",
        "    overview: true\n",
        "    code-line-numbers: false\n",
        "    theme: [default, style.scss]\n",
        "    backgroundcolor: e2e2e3\n",
        "execute:\n",
        "    echo: true\n",
        "---\n",
        "\n",
        "\n",
        "# DimensionalData.jl\n",
        "\n",
        "## Why this package?\n",
        "\n",
        "## Geospatial data manipulation\n",
        "\n",
        "- Geospatial rasters data comes as arrays or collections of arrays\n",
        "- These usually have named dimensions and lookup values for 2-N dimensions\n",
        "- Multi-array datasets share some or all dimensions\n",
        "\n",
        "## Other data \n",
        "\n",
        "- Lots of non-geospatial data follows similar patterns\n",
        "- We should share base code accross fields\n",
        "- Extensible: abstract types, simple extensible interface\n",
        "\n",
        "## Why not use existing package?\n",
        "\n",
        "- Other options were not extensible enough\n",
        "- I had to change too many things to get through PR reviews\n",
        "- The lisp curse\n",
        "\n",
        "[Docs](https://rafaqz.github.io/DimensionalData.jl/v0.27.3/)\n",
        "\n",
        "# Constructors\n",
        "\n",
        "rand/zeros etc\n",
        "\n",
        "\n",
        "```{julia}\n",
        "using DimensionalData\n",
        "z = zeros(3, 4)\n",
        "A = DimArray(z, (a=[:a, :b, :c], b=10.0:10:40.0))\n",
        "```\n",
        "\n",
        "\n",
        "Base methods\n",
        "Broadcasts\n",
        "Reverse with dims\n",
        "Sum with dims\n",
        "Named indexing, with benchmarks\n",
        "Selectors, with benchmarks\n",
        "Dimensions\n",
        "DataFrame\n",
        "Lookups\n",
        "DimStack\n",
        "Construction\n",
        "indexing\n",
        "\n",
        "`broadcast_dims`\n",
        "`groupby`\n",
        "\n",
        "# Integrations\n",
        "\n",
        "- [Rasters]()\n",
        "- [YAXArrays]() \n",
        "- [ClimateBase]()\n",
        "- [AstroImages]()\n",
        "- [Arviz]() (even does python XArray <-> DimensionalData conversions)\n",
        "- [DynamicGrids]()\n"
      ],
      "id": "666a4a2f"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}